@model IEnumerable<CinelAirMiles.Models.TransactionViewModel>



<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <div class="content-header">
        <div class="container">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h2 class="m-0 text-dark">My transactions</h2>
                </div><!-- /.col -->
            </div><!-- /.row -->
        </div><!-- /.container-fluid -->
    </div>
    <!-- /.content-header -->
    <!-- Main content -->
    <div class="content">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="card">
                        <!-- /.card-header -->
                        <div class="card-header">
                            <h4 class="card-title">Status Miles: </h4>
                            <h4 class="card-title">Bonus Miles: </h4>
                        </div>

                        <div>
                            <button id="btn_ConvertMiles" action="ConvertMiles" controller="Transaction">Convert Miles</button>
                            <button id="btn_ExtendMiles" action="ExtendMiles" controller="Transaction">Extend Miles</button>
                            <button id="btn_NominateToGold" action="NominateToGold" controller="Transaction">Nominate To Gold</button>
                            <button id="btn_Purchase" action="Purchase" controller="Transaction">Purchase Miles</button>
                            <button id="btn_Transfer" action="TransferMiles" controller="Transaction">Transfer Miles</button>
                        </div>

                        <div id="form_container">

                        </div>


                        <table id="flights" class="display table table-bordered table-striped" style="width:100%">
                            <thead>
                                <tr>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Type)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Value)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Price)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.PremiumOffer)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.TransferTo)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.StartBalance)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.EndBalance)
                                    </th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Type)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Value)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Price)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.PremiumOffer)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.TransferTo)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.StartBalance)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.EndBalance)
                                        </td>
                                        <td>
                                            <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script type="text/javascript">

        window.addEventListener('DOMContentLoaded', function () {
            byID('btn_ConvertMiles').addEventListener('click', openPartialCreate);
            byID('btn_ExtendMiles').addEventListener('click', openPartialCreate);
            byID('btn_NominateToGold').addEventListener('click', openPartialCreate);
            byID('btn_Purchase').addEventListener('click', openPartialCreate);
            byID('btn_Transfer').addEventListener('click', openPartialCreate);
        });

    </script>
}

